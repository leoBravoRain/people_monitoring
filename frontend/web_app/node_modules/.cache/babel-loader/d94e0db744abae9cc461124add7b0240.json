{"ast":null,"code":"var _jsxFileName = \"/home/leo/Desktop/projects/own/People_Monitoring/frontend/web_app/src/components/dashboard_areas.component.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport { Line } from 'react-chartjs-2'; // make request to server\n\nimport axios from 'axios'; // fake data\n// var messages = [\n// \t{date: '19-03-2019', message: 'Mi jefe directo me grita cada vez que quiere pedirme algo, debería mejorar su trato conmigo'},\n// \t\t{date: '22-03-2019', message: 'Mi jefe directo es muy prepotente en las reuniones que tenemos'},\n// \t\t{date: '1-04-2019', message: 'Ha mejorado demasiado el trato de mi jefe, ahora es muy respetuoso conmigo y mis compañeros ¡Gracias por la intervención!'}\n// ]\n// fake data\n\nvar actions = [{\n  date: '22-03-2019',\n  action: 'Se conversa con jefe directo para que mejore trato con trabajadores'\n}, {\n  date: '25-03-2019',\n  action: 'Se envía a jefe directo a couching para mejorar trato con colaboradores'\n}]; // // fake data\n// const data = {\n//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n//   datasets: [\n//     {\n//       label: 'Estado de animo del area',\n//       fill: false,\n//       lineTension: 0.1,\n//       backgroundColor: 'rgba(75,192,192,0.4)',\n//       borderColor: 'rgba(75,192,192,1)',\n//       borderCapStyle: 'butt',\n//       borderDash: [],\n//       borderDashOffset: 0.0,\n//       borderJoinStyle: 'miter',\n//       pointBorderColor: 'rgba(75,192,192,1)',\n//       pointBackgroundColor: '#fff',\n//       pointBorderWidth: 1,\n//       pointHoverRadius: 5,\n//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n//       pointHoverBorderWidth: 2,\n//       pointRadius: 1,\n//       pointHitRadius: 10,\n//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n//     }\n//   ]\n// };\n// componentn itself\n\nclass Dashboard_Areas extends Component {\n  // constructor\n  constructor(props) {\n    // constructur of parent\n    super(props); // initial states\n\n    this.state = {\n      area_name: this.props.match.params.area_name,\n      messages: [],\n      actions: actions,\n      data: {}\n    };\n    this.create_action_button = this.create_action_button.bind(this);\n  }\n\n  create_action_button() {\n    this.props.history.push('/work_env_manag_home/create_new_area/');\n  }\n\n  get_data_from_API() {\n    // get request for get data\n    axios.get('http://192.168.1.9:4000/people_monitoring//daily_question/' + this.props.match.params.area_id) // if ok\n    .then(response => {\n      // get data from API\n      const califications = response.data;\n      const data = [];\n      const labels = []; // console.log(califications);\n\n      califications.map(function (currentValue, index, arr) {\n        // add location item in required map format\n        // currentValue['location'] = [currentValue.latitude, currentValue.longitude];\n        data.push(currentValue.calification);\n        labels.push(currentValue.date);\n      });\n      console.log(data);\n      console.log(labels); // const data_ = {\n      //   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n      //   datasets: [\n      //     {\n      //       label: 'Estado de animo del area',\n      //       fill: false,\n      //       lineTension: 0.1,\n      //       backgroundColor: 'rgba(75,192,192,0.4)',\n      //       borderColor: 'rgba(75,192,192,1)',\n      //       borderCapStyle: 'butt',\n      //       borderDash: [],\n      //       borderDashOffset: 0.0,\n      //       borderJoinStyle: 'miter',\n      //       pointBorderColor: 'rgba(75,192,192,1)',\n      //       pointBackgroundColor: '#fff',\n      //       pointBorderWidth: 1,\n      //       pointHoverRadius: 5,\n      //       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      //       pointHoverBorderColor: 'rgba(220,220,220,1)',\n      //       pointHoverBorderWidth: 2,\n      //       pointRadius: 1,\n      //       pointHitRadius: 10,\n      //       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n      //     }\n      //   ]\n      // };\n\n      const data_ = {};\n      data_['labels'] = labels;\n      var tmp = {\n        label: 'Estado de animo del area',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      };\n      tmp['data'] = data;\n      data_['datasets'] = [tmp]; // update state\n\n      this.setState({\n        data: data_\n      });\n    }) // if error\n    .catch(function (error) {\n      window.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!'); // dislpay error in console\n\n      console.log(error);\n    });\n  } // life cycle of component\n\n\n  componentDidMount() {\n    // get request for messages from users\n    axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id) // if ok\n    .then(response => {\n      // get data from API\n      const messages = response.data; // console.log(messages);\n      // update state\n\n      this.setState({\n        messages: messages\n      });\n    }) // if error\n    .catch(function (error) {\n      window.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!'); // dislpay error in console\n\n      console.log(error);\n    });\n    get_data_from_API(); // // get request for get data\n    //       axios.get('http://192.168.1.9:4000/people_monitoring//daily_question/' + this.props.match.params.area_id)\n    //       \t// if ok\n    //           .then(response => {\n    //           \t// get data from API\n    //           \tconst califications = response.data;\n    //           \tconst data = [];\n    //           \tconst labels = [];\n    //           \t// console.log(califications);\n    //           \tcalifications.map( function(currentValue, index, arr) {\n    //           \t\t// add location item in required map format\n    //           \t\t// currentValue['location'] = [currentValue.latitude, currentValue.longitude];\n    //           \t\tdata.push(currentValue.calification);\n    //           \t\tlabels.push(currentValue.date);\n    //           \t});\n    //           \tconsole.log(data);\n    //           \tconsole.log(labels);\n    //       \t\t// const data_ = {\n    //       \t\t//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n    //       \t\t//   datasets: [\n    //       \t\t//     {\n    //       \t\t//       label: 'Estado de animo del area',\n    //       \t\t//       fill: false,\n    //       \t\t//       lineTension: 0.1,\n    //       \t\t//       backgroundColor: 'rgba(75,192,192,0.4)',\n    //       \t\t//       borderColor: 'rgba(75,192,192,1)',\n    //       \t\t//       borderCapStyle: 'butt',\n    //       \t\t//       borderDash: [],\n    //       \t\t//       borderDashOffset: 0.0,\n    //       \t\t//       borderJoinStyle: 'miter',\n    //       \t\t//       pointBorderColor: 'rgba(75,192,192,1)',\n    //       \t\t//       pointBackgroundColor: '#fff',\n    //       \t\t//       pointBorderWidth: 1,\n    //       \t\t//       pointHoverRadius: 5,\n    //       \t\t//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    //       \t\t//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n    //       \t\t//       pointHoverBorderWidth: 2,\n    //       \t\t//       pointRadius: 1,\n    //       \t\t//       pointHitRadius: 10,\n    //       \t\t//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n    //       \t\t//     }\n    //       \t\t//   ]\n    //       \t\t// };\n    //       \t\tconst data_ = {};\n    //       \t\tdata_['labels'] = labels;\n    //       \t\tvar tmp = {\n    //       \t\t\t\tlabel: 'Estado de animo del area',\n    // \t\t\t\tfill: false,\n    // \t\t\t\tlineTension: 0.1,\n    // \t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n    // \t\t\t\tborderColor: 'rgba(75,192,192,1)',\n    // \t\t\t\tborderCapStyle: 'butt',\n    // \t\t\t\tborderDash: [],\n    // \t\t\t\tborderDashOffset: 0.0,\n    // \t\t\t\tborderJoinStyle: 'miter',\n    // \t\t\t\tpointBorderColor: 'rgba(75,192,192,1)',\n    // \t\t\t\tpointBackgroundColor: '#fff',\n    // \t\t\t\tpointBorderWidth: 1,\n    // \t\t\t\tpointHoverRadius: 5,\n    // \t\t\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    // \t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n    // \t\t\t\tpointHoverBorderWidth: 2,\n    // \t\t\t\tpointRadius: 1,\n    // \t\t\t\tpointHitRadius: 10,\n    //       \t\t};\n    //       \t\ttmp['data'] = data;\n    //       \t\tdata_['datasets'] = [tmp];\n    //           \t// update state\n    //           \tthis.setState({\n    //           \t\tdata: data_,\n    //           \t});\n    //           })\n    //           // if error\n    //           .catch(function (error){\n    //           \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n    //           \t// dislpay error in console\n    //               console.log(error);\n    //           });\n  }\n\n  render() {\n    // console.log(this.state.messages);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Area \", this.state.area_name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Link:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.props.match.params.area_id), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Monitoreo de estado an\\xEDmico\"), React.createElement(Line, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Mensajes de trabajadores del \\xE1rea\"), React.createElement(\"div\", {\n      className: \"table table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Numero\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Mensaje\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, this.state.messages.map((message, idx) => React.createElement(\"tr\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \" \", idx + 1, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \" \", message.date, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \" \", message.message, \" \"))))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"Acciones tomadas\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Agregar acci\\xF3n\")), React.createElement(\"div\", {\n      className: \"table table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Numero\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Acci\\xF3n\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, this.state.actions.map((action, idx) => React.createElement(\"tr\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \" \", idx + 1, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \" \", action.date, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \" \", action.action, \" \"))))))));\n  }\n\n}\n\nexport default Dashboard_Areas;","map":{"version":3,"sources":["/home/leo/Desktop/projects/own/People_Monitoring/frontend/web_app/src/components/dashboard_areas.component.js"],"names":["React","Component","BrowserRouter","Link","Line","axios","actions","date","action","Dashboard_Areas","constructor","props","state","area_name","match","params","messages","data","create_action_button","bind","history","push","get_data_from_API","get","area_id","then","response","califications","labels","map","currentValue","index","arr","calification","console","log","data_","tmp","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","setState","catch","error","window","confirm","componentDidMount","render","message","idx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nimport {Line} from 'react-chartjs-2';\n// make request to server\nimport axios from 'axios';\n\n// fake data\n// var messages = [\n\n// \t{date: '19-03-2019', message: 'Mi jefe directo me grita cada vez que quiere pedirme algo, debería mejorar su trato conmigo'},\n// \t\t{date: '22-03-2019', message: 'Mi jefe directo es muy prepotente en las reuniones que tenemos'},\n// \t\t{date: '1-04-2019', message: 'Ha mejorado demasiado el trato de mi jefe, ahora es muy respetuoso conmigo y mis compañeros ¡Gracias por la intervención!'}\n\n// ]\n\n// fake data\nvar actions = [\n\n\t{date: '22-03-2019', action: 'Se conversa con jefe directo para que mejore trato con trabajadores'},\n\t{date: '25-03-2019', action: 'Se envía a jefe directo a couching para mejorar trato con colaboradores'}\n\n]\n\n// // fake data\n// const data = {\n//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n//   datasets: [\n//     {\n//       label: 'Estado de animo del area',\n//       fill: false,\n//       lineTension: 0.1,\n//       backgroundColor: 'rgba(75,192,192,0.4)',\n//       borderColor: 'rgba(75,192,192,1)',\n//       borderCapStyle: 'butt',\n//       borderDash: [],\n//       borderDashOffset: 0.0,\n//       borderJoinStyle: 'miter',\n//       pointBorderColor: 'rgba(75,192,192,1)',\n//       pointBackgroundColor: '#fff',\n//       pointBorderWidth: 1,\n//       pointHoverRadius: 5,\n//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n//       pointHoverBorderWidth: 2,\n//       pointRadius: 1,\n//       pointHitRadius: 10,\n//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n//     }\n//   ]\n// };\n\n// componentn itself\nclass Dashboard_Areas extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tarea_name: this.props.match.params.area_name,\n\t\t\tmessages: [],\n\t\t\tactions: actions,\n\t\t\tdata: {},\n\t\t}\n\n\t\tthis.create_action_button = this.create_action_button.bind(this);\n\n\t};\n\n\tcreate_action_button() {\n\n\t\tthis.props.history.push('/work_env_manag_home/create_new_area/');\n\n\t};\n\n\tget_data_from_API() {\n\n\t\t// get request for get data\n        axios.get('http://192.168.1.9:4000/people_monitoring//daily_question/' + this.props.match.params.area_id)\n\n        \t// if ok\n            .then(response => {\n\n            \t// get data from API\n            \tconst califications = response.data;\n\n            \tconst data = [];\n            \tconst labels = [];\n\n            \t// console.log(califications);\n            \tcalifications.map( function(currentValue, index, arr) {\n\n            \t\t// add location item in required map format\n            \t\t// currentValue['location'] = [currentValue.latitude, currentValue.longitude];\n            \t\tdata.push(currentValue.calification);\n            \t\tlabels.push(currentValue.date);\n\n            \t});\n\n            \tconsole.log(data);\n            \tconsole.log(labels);\n\n        \t\t// const data_ = {\n        \t\t//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n        \t\t//   datasets: [\n        \t\t//     {\n        \t\t//       label: 'Estado de animo del area',\n        \t\t//       fill: false,\n        \t\t//       lineTension: 0.1,\n        \t\t//       backgroundColor: 'rgba(75,192,192,0.4)',\n        \t\t//       borderColor: 'rgba(75,192,192,1)',\n        \t\t//       borderCapStyle: 'butt',\n        \t\t//       borderDash: [],\n        \t\t//       borderDashOffset: 0.0,\n        \t\t//       borderJoinStyle: 'miter',\n        \t\t//       pointBorderColor: 'rgba(75,192,192,1)',\n        \t\t//       pointBackgroundColor: '#fff',\n        \t\t//       pointBorderWidth: 1,\n        \t\t//       pointHoverRadius: 5,\n        \t\t//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        \t\t//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n        \t\t//       pointHoverBorderWidth: 2,\n        \t\t//       pointRadius: 1,\n        \t\t//       pointHitRadius: 10,\n        \t\t//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n        \t\t//     }\n        \t\t//   ]\n        \t\t// };\n\n        \t\tconst data_ = {};\n        \t\tdata_['labels'] = labels;\n\n        \t\tvar tmp = {\n        \t\t\t\tlabel: 'Estado de animo del area',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tlineTension: 0.1,\n\t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tborderCapStyle: 'butt',\n\t\t\t\t\t\tborderDash: [],\n\t\t\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\t\t\tborderJoinStyle: 'miter',\n\t\t\t\t\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\t\t\tpointBorderWidth: 1,\n\t\t\t\t\t\tpointHoverRadius: 5,\n\t\t\t\t\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\tpointHitRadius: 10,\n        \t\t};\n\n        \t\ttmp['data'] = data;\n        \t\tdata_['datasets'] = [tmp];\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tdata: data_,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\n\t}\n\n\t// life cycle of component\n\tcomponentDidMount() {\n\n\t\t// get request for messages from users\n        axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id)\n\n        \t// if ok\n            .then(response => {\n\n            \t// get data from API\n            \tconst messages = response.data;\n\n            \t// console.log(messages);\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tmessages: messages,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\t\t\n\t\tget_data_from_API();\n\t\t// // get request for get data\n  //       axios.get('http://192.168.1.9:4000/people_monitoring//daily_question/' + this.props.match.params.area_id)\n\n  //       \t// if ok\n  //           .then(response => {\n\n  //           \t// get data from API\n  //           \tconst califications = response.data;\n\n  //           \tconst data = [];\n  //           \tconst labels = [];\n\n  //           \t// console.log(califications);\n  //           \tcalifications.map( function(currentValue, index, arr) {\n\n  //           \t\t// add location item in required map format\n  //           \t\t// currentValue['location'] = [currentValue.latitude, currentValue.longitude];\n  //           \t\tdata.push(currentValue.calification);\n  //           \t\tlabels.push(currentValue.date);\n\n  //           \t});\n\n  //           \tconsole.log(data);\n  //           \tconsole.log(labels);\n\n  //       \t\t// const data_ = {\n  //       \t\t//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n  //       \t\t//   datasets: [\n  //       \t\t//     {\n  //       \t\t//       label: 'Estado de animo del area',\n  //       \t\t//       fill: false,\n  //       \t\t//       lineTension: 0.1,\n  //       \t\t//       backgroundColor: 'rgba(75,192,192,0.4)',\n  //       \t\t//       borderColor: 'rgba(75,192,192,1)',\n  //       \t\t//       borderCapStyle: 'butt',\n  //       \t\t//       borderDash: [],\n  //       \t\t//       borderDashOffset: 0.0,\n  //       \t\t//       borderJoinStyle: 'miter',\n  //       \t\t//       pointBorderColor: 'rgba(75,192,192,1)',\n  //       \t\t//       pointBackgroundColor: '#fff',\n  //       \t\t//       pointBorderWidth: 1,\n  //       \t\t//       pointHoverRadius: 5,\n  //       \t\t//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  //       \t\t//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n  //       \t\t//       pointHoverBorderWidth: 2,\n  //       \t\t//       pointRadius: 1,\n  //       \t\t//       pointHitRadius: 10,\n  //       \t\t//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n  //       \t\t//     }\n  //       \t\t//   ]\n  //       \t\t// };\n\n  //       \t\tconst data_ = {};\n  //       \t\tdata_['labels'] = labels;\n\n  //       \t\tvar tmp = {\n  //       \t\t\t\tlabel: 'Estado de animo del area',\n\t\t// \t\t\t\tfill: false,\n\t\t// \t\t\t\tlineTension: 0.1,\n\t\t// \t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t// \t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t// \t\t\t\tborderCapStyle: 'butt',\n\t\t// \t\t\t\tborderDash: [],\n\t\t// \t\t\t\tborderDashOffset: 0.0,\n\t\t// \t\t\t\tborderJoinStyle: 'miter',\n\t\t// \t\t\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\t// \t\t\t\tpointBackgroundColor: '#fff',\n\t\t// \t\t\t\tpointBorderWidth: 1,\n\t\t// \t\t\t\tpointHoverRadius: 5,\n\t\t// \t\t\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t// \t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t// \t\t\t\tpointHoverBorderWidth: 2,\n\t\t// \t\t\t\tpointRadius: 1,\n\t\t// \t\t\t\tpointHitRadius: 10,\n  //       \t\t};\n\n  //       \t\ttmp['data'] = data;\n  //       \t\tdata_['datasets'] = [tmp];\n\n  //           \t// update state\n  //           \tthis.setState({\n\n  //           \t\tdata: data_,\n\n  //           \t});\n\n  //           })\n\n  //           // if error\n  //           .catch(function (error){\n\n  //           \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n  //           \t// dislpay error in console\n  //               console.log(error);\n\n  //           });\n\n\n\t};\n\n\trender() {\n\n\t\t// console.log(this.state.messages);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h1>\n\n\t\t\t\t\tArea {this.state.area_name}\n\n\t\t\t\t</h1>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tLink: \n\n\t\t\t\t</h2>\n\n\t\t\t\t<p>\n\n\t\t\t\t\t{this.props.match.params.area_id}\n\n\t\t\t\t</p>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMonitoreo de estado anímico\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<Line data={this.state.data} />\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMensajes de trabajadores del área\n\n\t\t\t\t\t</h3>\n\t\t\t\t\t\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNumero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tMensaje\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.messages.map( (message, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.message} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tAcciones tomadas\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\t<button type=\"button\" className =\"btn btn-primary\"> \n\n\t\t\t\t\t\t\tAgregar acción \n\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNumero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tAcción\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.actions.map( (action, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.action} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Dashboard_Areas;"]},"metadata":{},"sourceType":"module"}