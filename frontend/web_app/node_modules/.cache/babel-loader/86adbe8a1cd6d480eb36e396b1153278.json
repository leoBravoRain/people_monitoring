{"ast":null,"code":"var _jsxFileName = \"/home/leo/Desktop/projects/own/People_Monitoring/frontend/web_app/src/components/dashboard_areas.component.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport { Line } from 'react-chartjs-2'; // make request to server\n\nimport axios from 'axios'; // fake data\n// var messages = [\n// \t{date: '19-03-2019', message: 'Mi jefe directo me grita cada vez que quiere pedirme algo, debería mejorar su trato conmigo'},\n// \t\t{date: '22-03-2019', message: 'Mi jefe directo es muy prepotente en las reuniones que tenemos'},\n// \t\t{date: '1-04-2019', message: 'Ha mejorado demasiado el trato de mi jefe, ahora es muy respetuoso conmigo y mis compañeros ¡Gracias por la intervención!'}\n// ]\n// fake data\n\nvar actions = [{\n  date: '22-03-2019',\n  action: 'Se conversa con jefe directo para que mejore trato con trabajadores'\n}, {\n  date: '25-03-2019',\n  action: 'Se envía a jefe directo a couching para mejorar trato con colaboradores'\n}]; // // fake data\n// const data = {\n//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n//   datasets: [\n//     {\n//       label: 'Estado de animo del area',\n//       fill: false,\n//       lineTension: 0.1,\n//       backgroundColor: 'rgba(75,192,192,0.4)',\n//       borderColor: 'rgba(75,192,192,1)',\n//       borderCapStyle: 'butt',\n//       borderDash: [],\n//       borderDashOffset: 0.0,\n//       borderJoinStyle: 'miter',\n//       pointBorderColor: 'rgba(75,192,192,1)',\n//       pointBackgroundColor: '#fff',\n//       pointBorderWidth: 1,\n//       pointHoverRadius: 5,\n//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n//       pointHoverBorderWidth: 2,\n//       pointRadius: 1,\n//       pointHitRadius: 10,\n//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n//     }\n//   ]\n// };\n// componentn itself\n\nclass Dashboard_Areas extends Component {\n  // constructor\n  constructor(props) {\n    // constructur of parent\n    super(props); // initial states\n\n    this.state = {\n      area_name: this.props.match.params.area_name,\n      messages: [],\n      actions: [],\n      data: {},\n      get_data: false,\n      get_actions: false\n    };\n    this.create_action_button = this.create_action_button.bind(this);\n    this.get_data_from_API = this.get_data_from_API.bind(this);\n  }\n\n  create_action_button() {\n    this.props.history.push('/work_env_manag_home/create_new_area/');\n  }\n\n  // get data from API\n  get_data_from_API() {\n    // get request for get data\n    axios.get('http://192.168.1.9:4000/people_monitoring/daily_question/' + this.props.match.params.area_id) // if ok\n    .then(response => {\n      // get data from API\n      const califications = response.data; // data structure for chart data\n\n      const data = [];\n      const labels = []; // console.log(califications);\n\n      califications.map(function (currentValue, index, arr) {\n        // get data\n        data.push(currentValue.calification);\n        labels.push(currentValue.date);\n      }); // data sctructure\n\n      const data_ = {};\n      data_['labels'] = labels; // temporal variable\n\n      var tmp = {\n        label: 'Estado de animo del area',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10\n      };\n      tmp['data'] = data;\n      data_['datasets'] = [tmp]; // update state\n\n      this.setState({\n        data: data_,\n        get_data: true\n      });\n      console.log(this.state.data.labels.length);\n    }) // if error\n    .catch(function (error) {\n      window.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!'); // dislpay error in console\n\n      console.log(error);\n    });\n  }\n\n  get_actions_from_API() {\n    // get request for get data\n    axios.get('http://192.168.1.9:4000/people_monitoring/action_of_manager/' + this.props.match.params.area_id) // if ok\n    .then(response => {\n      console.log(response); // update state\n\n      this.setState({\n        actions: actions,\n        get_actions: true\n      });\n    }) // if error\n    .catch(function (error) {\n      window.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!'); // dislpay error in console\n\n      console.log(error);\n    });\n  }\n\n  // life cycle of component\n  componentDidMount() {\n    // get request for messages from users\n    axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id) // if ok\n    .then(response => {\n      // get data from API\n      const messages = response.data; // console.log(messages);\n      // update state\n\n      this.setState({\n        messages: messages\n      });\n    }) // if error\n    .catch(function (error) {\n      window.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!'); // dislpay error in console\n\n      console.log(error);\n    }); // get initial data\n\n    this.get_data_from_API(); // update data each (last_argument) milisecons\n\n    setInterval(this.get_data_from_API, 10000);\n  }\n\n  // render item\n  render() {\n    // console.log(this.state.messages);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Area \", this.state.area_name), React.createElement(\"div\", {\n      className: \"alert alert-primary\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Debes enviarles el ID del \\xE1rea a los trabajadores del \\xE1rea para que ellos puedan calificar el \\xE1rea y enviarte mensajes.\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"ID del \\xE1rea:\"), React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.props.match.params.area_id), React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Esta ID debes compartirla con los trabajadores del \\xE1rea\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Monitoreo de estado an\\xEDmico\"), this.state.get_data && this.state.data.labels.length > 0 ? null : React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Los trabajadores a\\xFAn no ingresan calificaciones\"), React.createElement(Line, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Mensajes de trabajadores del \\xE1rea\"), React.createElement(\"div\", {\n      className: \"alert alert-primary\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Recuerda que los mensajes enviados por los trabajadores son totalmente an\\xF3nimos\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.state.messages.length > 0 ? null : React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Los trabajadores a\\xFAn no te env\\xEDan mensajes\")), React.createElement(\"div\", {\n      className: \"table table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Numero\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Mensaje\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, this.state.messages.map((message, idx) => React.createElement(\"tr\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \" \", idx + 1, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \" \", message.date, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \" \", message.message, \" \"))))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Acciones tomadas\"), React.createElement(\"div\", {\n      className: \"alert alert-primary\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Ac\\xE1 puedes registrar las acciones correctivas que vayas realizando, de tal forma de gestionar y analizar si es que influyen en el estado an\\xEDmico del \\xE1rea\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Agregar acci\\xF3n\")), React.createElement(\"div\", {\n      className: \"table table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Numero\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Acci\\xF3n\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, this.state.actions.map((action, idx) => React.createElement(\"tr\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \" \", idx + 1, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \" \", action.date, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \" \", action.action, \" \"))))))));\n  }\n\n}\n\nexport default Dashboard_Areas;","map":{"version":3,"sources":["/home/leo/Desktop/projects/own/People_Monitoring/frontend/web_app/src/components/dashboard_areas.component.js"],"names":["React","Component","BrowserRouter","Link","Line","axios","actions","date","action","Dashboard_Areas","constructor","props","state","area_name","match","params","messages","data","get_data","get_actions","create_action_button","bind","get_data_from_API","history","push","get","area_id","then","response","califications","labels","map","currentValue","index","arr","calification","data_","tmp","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","setState","console","log","length","catch","error","window","confirm","get_actions_from_API","componentDidMount","setInterval","render","message","idx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nimport {Line} from 'react-chartjs-2';\n// make request to server\nimport axios from 'axios';\n\n// fake data\n// var messages = [\n\n// \t{date: '19-03-2019', message: 'Mi jefe directo me grita cada vez que quiere pedirme algo, debería mejorar su trato conmigo'},\n// \t\t{date: '22-03-2019', message: 'Mi jefe directo es muy prepotente en las reuniones que tenemos'},\n// \t\t{date: '1-04-2019', message: 'Ha mejorado demasiado el trato de mi jefe, ahora es muy respetuoso conmigo y mis compañeros ¡Gracias por la intervención!'}\n\n// ]\n\n// fake data\nvar actions = [\n\n\t{date: '22-03-2019', action: 'Se conversa con jefe directo para que mejore trato con trabajadores'},\n\t{date: '25-03-2019', action: 'Se envía a jefe directo a couching para mejorar trato con colaboradores'}\n\n]\n\n// // fake data\n// const data = {\n//   labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],\n//   datasets: [\n//     {\n//       label: 'Estado de animo del area',\n//       fill: false,\n//       lineTension: 0.1,\n//       backgroundColor: 'rgba(75,192,192,0.4)',\n//       borderColor: 'rgba(75,192,192,1)',\n//       borderCapStyle: 'butt',\n//       borderDash: [],\n//       borderDashOffset: 0.0,\n//       borderJoinStyle: 'miter',\n//       pointBorderColor: 'rgba(75,192,192,1)',\n//       pointBackgroundColor: '#fff',\n//       pointBorderWidth: 1,\n//       pointHoverRadius: 5,\n//       pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n//       pointHoverBorderColor: 'rgba(220,220,220,1)',\n//       pointHoverBorderWidth: 2,\n//       pointRadius: 1,\n//       pointHitRadius: 10,\n//       data: [-0.9, -0.9, -0.5, -0.1, 0, 0.1, 0.3, 0.1, 0.5, 0.8, 0.5, 0.8]\n//     }\n//   ]\n// };\n\n// componentn itself\nclass Dashboard_Areas extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tarea_name: this.props.match.params.area_name,\n\t\t\tmessages: [],\n\t\t\tactions: [],\n\t\t\tdata: {},\n\t\t\tget_data: false,\n\t\t\tget_actions: false,\n\t\t}\n\n\t\tthis.create_action_button = this.create_action_button.bind(this);\n\t\tthis.get_data_from_API = this.get_data_from_API.bind(this);\n\n\t};\n\n\tcreate_action_button() {\n\n\t\tthis.props.history.push('/work_env_manag_home/create_new_area/');\n\n\t};\n\n\t// get data from API\n\tget_data_from_API() {\n\n\t\t// get request for get data\n        axios.get('http://192.168.1.9:4000/people_monitoring/daily_question/' + this.props.match.params.area_id)\n\n        \t// if ok\n            .then(response => {\n\n            \t// get data from API\n            \tconst califications = response.data;\n\n            \t// data structure for chart data\n            \tconst data = [];\n            \tconst labels = [];\n\n            \t// console.log(califications);\n            \tcalifications.map( function(currentValue, index, arr) {\n\n            \t\t// get data\n            \t\tdata.push(currentValue.calification);\n            \t\tlabels.push(currentValue.date);\n\n            \t});\n\n            \t// data sctructure\n        \t\tconst data_ = {};\n        \t\tdata_['labels'] = labels;\n        \t\t// temporal variable\n        \t\tvar tmp = {\n        \t\t\t\tlabel: 'Estado de animo del area',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tlineTension: 0.1,\n\t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tborderCapStyle: 'butt',\n\t\t\t\t\t\tborderDash: [],\n\t\t\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\t\t\tborderJoinStyle: 'miter',\n\t\t\t\t\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\t\t\tpointBorderWidth: 1,\n\t\t\t\t\t\tpointHoverRadius: 5,\n\t\t\t\t\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\tpointHitRadius: 10,\n        \t\t};\n        \t\ttmp['data'] = data;\n        \t\tdata_['datasets'] = [tmp];\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tdata: data_,\n            \t\tget_data: true,\n\n            \t});\n\n            \tconsole.log(this.state.data.labels.length);\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\tget_actions_from_API(){\n\n\t\t// get request for get data\n        axios.get('http://192.168.1.9:4000/people_monitoring/action_of_manager/' + this.props.match.params.area_id)\n\n        \t// if ok\n            .then(response => {\n\n            \tconsole.log(response);\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tactions: actions,\n            \t\tget_actions: true,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\t// life cycle of component\n\tcomponentDidMount() {\n\n\t\t// get request for messages from users\n        axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id)\n\n        \t// if ok\n            .then(response => {\n\n            \t// get data from API\n            \tconst messages = response.data;\n\n            \t// console.log(messages);\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tmessages: messages,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\t\t\n\t\t// get initial data\n\t\tthis.get_data_from_API();\n\n\t\t// update data each (last_argument) milisecons\n\t\tsetInterval(this.get_data_from_API, 10000);\n\n\t};\n\n\t// render item\n\trender() {\n\n\t\t// console.log(this.state.messages);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h1>\n\n\t\t\t\t\tArea {this.state.area_name}\n\n\t\t\t\t</h1>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tDebes enviarles el ID del área a los trabajadores del área para que ellos puedan calificar el área y enviarte mensajes.\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<h2>\n\n\t\t\t\t\t\tID del área: \n\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<div className=\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\t{this.props.match.params.area_id}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className =\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\tEsta ID debes compartirla con los trabajadores del área\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMonitoreo de estado anímico\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t{this.state.get_data && this.state.data.labels.length > 0 \n\n\t\t\t\t\t\t? \n\n\t\t\t\t\t\t\tnull \n\n\t\t\t\t\t\t: \n\n\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t\tLos trabajadores aún no ingresan calificaciones\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t}\n\n\t\t\t\t\t<Line data={this.state.data} />\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMensajes de trabajadores del área\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t\tRecuerda que los mensajes enviados por los trabajadores son totalmente anónimos\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div> \n\n\t\t\t\t\t\t{this.state.messages.length > 0\n\n\t\t\t\t\t\t\t?\n\n\t\t\t\t\t\t\t\tnull\n\n\t\t\t\t\t\t\t:\n\n\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t\t\t\tLos trabajadores aún no te envían mensajes\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNumero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tMensaje\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.messages.map( (message, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.message} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tAcciones tomadas\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t\tAcá puedes registrar las acciones correctivas que vayas realizando, de tal forma de gestionar y analizar si es que influyen en el estado anímico del área\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\t<button type=\"button\" className =\"btn btn-primary\"> \n\n\t\t\t\t\t\t\tAgregar acción \n\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNumero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tAcción\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.actions.map( (action, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.action} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Dashboard_Areas;"]},"metadata":{},"sourceType":"module"}