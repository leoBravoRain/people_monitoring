{"version":3,"sources":["components/home.component.js","components/work_environment_manager_home.component.js","config/firebase.js","components/create_new_group.component.js","components/work_environment_manager_dashboard.component.js","components/create_new_area.component.js","components/dashboard_areas.component.js","components/daily_question.component.js","components/worker_message.component.js","components/worker_dashboard.component.js","components/login_worker.component.js","components/login_to_group.component.js","components/create_new_action_of_manager.component.js","App.js","serviceWorker.js","index.js"],"names":["Work_Env_Manager_Dashboard","className","role","to","this","props","match","url","concat","Component","Work_Environment_Manager_Home","fs","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Create_New_Group","state","name","password","on_submit","bind","on_change_input_name","on_change_input_password","event","preventDefault","group","collection","add","then","ref","window","confirm","history","push","id","catch","error","console","log","setState","target","value","onSubmit","type","onChange","Home","group_name","params","areas","create_area_button","group_id","doc","get","snapshotquery","forEach","area","data","onClick","map","idx","key","_id","Create_New_Area","handleChange","response","Dashboard_Areas","area_name","messages","actions","get_data","get_actions","create_action_button","get_data_from_API","get_messages_from_worker","area_id","labels","calification","date","data_","tmp","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","action","description","toDate","toString","message","setInterval","get_actions_from_API","length","Daily_Question","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","calification_","Worker_Message","on_submit_message","handle_change","message_","Dashboard_Worker","class","Login_Worker","on_change_input_area","on_change_input_group","exists","Login_to_Group","Manager_Action","on_submit_action","action_","axios","post","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4080ffa1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\nclass Work_Env_Manager_Dashboard extends Component {\n\n\trender() {\n\n\t\t// console.log(this);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tCon esta plataforma se puede gestionar de mejor forma el ambiente laboral dentro de las áreas de trabajo de tu empresa\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h2>\n\n\t\t\t\t\t\t¿Cuál es tu rol dentro de tu empresa?\n\n\t\t\t\t\t</h2>\n\t\t\t\t\t\n\t\t\t\t\t<p className = 'container'>\n\n\t\t\t\t\t\t<Link className =\"btn btn-primary btn-block\" to = { this.props.match.url.concat('work_env_manag_home')}>\n\n\t\t\t\t\t\t\tEncargado de clima laboral\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className = 'container'>\n\n\t\t\t\t\t\t<Link className =\"btn btn-info btn-block\" to = { this.props.match.url.concat('login_worker')}>\n\n\t\t                    Trabajador\n\n\t                  \t</Link>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Work_Env_Manager_Dashboard;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\nclass Work_Environment_Manager_Home extends Component {\n\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\t¿Qué quieres hacer?\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tSi es que no tienes tu empresa registrada en la plataforma, entonces primero debes crearla presionando el siguiente botón\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className = 'container'>\n\n\t\t\t\t\t\t<Link className =\"btn btn-primary btn-block\" to = { this.props.match.url.concat('/create_new_group')}>\n\n\t\t\t\t\t\t\tCrear nueva empresa para monitorear\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tSi es que ya tienes tu empresa registrada en la plataforma, presiona el siguiente botón\n\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<p className = 'container'>\n\n\t\t\t\t\t\t<Link className =\"btn btn-primary btn-block\" to = { this.props.match.url.concat('/login_to_group')}>\n\n\t\t                    Ver empresa\n\n\t                  \t</Link>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Work_Environment_Manager_Home;","// import firebase from \"firebase/app\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBAJUAAq-vvEOf4VfxWSAnXqvFGHLJ3Llo\",\n    authDomain: \"people-monitoring-d707a.firebaseapp.com\",\n    databaseURL: \"https://people-monitoring-d707a.firebaseio.com\",\n    projectId: \"people-monitoring-d707a\",\n    storageBucket: \"\",\n    messagingSenderId: \"538538031695\",\n    appId: \"1:538538031695:web:189464de7d65a2e201083a\"\n  };\n\n// initialize firebase\nconst app = firebase.initializeApp(firebaseConfig);\n// firebase.initializeApp(firebaseConfig);\n\nexport const fs = app.firestore();\n// export const st = app.storage();","import React, { Component } from \"react\";\n\n// make request to server\nimport axios from 'axios';\n\nimport {fs} from \"../config/firebase\";\n\nclass Create_New_Group extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tname: null,\n\t\t\tpassword: null,\n\t\t}\n\n\t\tthis.on_submit = this.on_submit.bind(this);\n\t\tthis.on_change_input_name = this.on_change_input_name.bind(this);\n\t\tthis.on_change_input_password = this.on_change_input_password.bind(this);\n\n\n\t};\n\n\ton_submit(event) {\n\n\t\t// console.log(this);\n\n\t\t// prevent default\n\t\tevent.preventDefault();\n\t\t\n\t\t// build body for post request\n\t\tconst group = {\n\n\t\t\tname: this.state.name,\n\t\t\tpassword: this.state.password,\n\n\t\t};\n\n\t\t// post request\n        // axios.post('http://192.168.1.9:4000/people_monitoring/add_group/', group)\n        fs.collection('groups').add(group)\n        \t// if ok\n            .then(ref => {\n\n            \t// const group = ref.data;\n            \t// console.log(\"group added in: \", ref.id);\n            \t// console.log(ref.data);\n\n        \t\t// console.log('Submit');\n        \t\twindow.confirm(\"¡La empresa ha sido creada exitosamente!\");\n\n        \t\t// // redirect to other path\n        \t\tconst url = '/work_env_manag_home/dashboard_group/';\n        \t\tthis.props.history.push(url.concat(ref.id, '/', group.name + '/'));\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \t// user message\n            \twindow.confirm('Ups, tuvimos un problema, ¡vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t\t// this.props.history.push('/work_env_manag_home/dashboard_group/');\n\n\t};\n\n\ton_change_input_name(event) {\n\n\t\tthis.setState({name : event.target.value})\n\n\t};\n\t\n\ton_change_input_password(event) {\n\n\t\tthis.setState({password : event.target.value})\n\n\t};\n\t\n\trender() {\n\n\t\t// console.log(this);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tCrear nueva empresa para monitorear\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\tRecuerda la contraseña que ingresaste, ya que debes escribirla cada vez que quieras ingresar al perfil de tu empresa\n\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={this.on_submit}>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> Nombre: </label>\n\n\t\t                <input  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.name}\n\t\t                        onChange={this.on_change_input_name}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <label> Contraseña: </label>\n\n\t\t                <input \n\t\t                        type=\"password\" \n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.password}\n\t\t                        onChange={this.on_change_input_password}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" value = \"Crear empresa\" className=\"btn btn-primary btn-block\" />\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t    </div>\n\n        );\n\n\t}\n\n}\n\nexport default Create_New_Group;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n// make request to server\n// import axios from 'axios';\nimport {fs} from \"../config/firebase\";\n\n// // fake data\n// var areas = [\n\n// \t{name: 'Mantención'},\n// \t{name: 'Area de Producción 1'},\n// \t{name: 'Area de Producción 2'},\n// \t{name: 'Finanzas'},\n// \t{name: 'Recursos Humanos'},\n// \t{name: 'Marketing'}\n// ];\n\nclass Home extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// console.log(this);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tgroup_name: this.props.match.params.group_name,\n\t\t\tareas: [],\n\t\t}\n\n\t\tthis.create_area_button = this.create_area_button.bind(this);\n\n\t};\n\n\tcreate_area_button() {\n\n\t\tconsole.log(this)\n\t\tconst url = '/work_env_manag_home/dashboard_group/';\n\t\tthis.props.history.push(url.concat(this.props.match.params.group_id, '/', this.props.match.params.group_name, '/', 'create_new_area'));\n\t\t// this.props.match.url.concat('/work_env_manag_home/dashboard_group/create_new_group');\n\n\t};\n\n\tcomponentDidMount() {\n\n\t\t// get request for get data\n        // axios.get('http://192.168.1.9:4000/people_monitoring/areas/' + this.props.match.params.group_id)\n        fs.collection('groups').doc(this.props.match.params.group_id).collection('areas').get().then( snapshotquery => {\n\n        \t// if ok\n            // .then(response => {\n\n            \tlet areas = [];\n\n            \t// get data from API\n            \t// const areas = response.data;\n\n        \t    // iterate over each item\n        \t    snapshotquery.forEach(doc => {\n\n        \t    \t// console.log(doc.data());\n        \t    \tlet area = doc.data();\n        \t    \t// post['doc_id'] = doc.id;\n        \t    \t// post['image'] = \"https://www.oreilly.com/library/view/deep-learning/9781491924570/assets/dpln_0201.png\";\n        \t\t\t// add item to array\n        \t\t\t// posts.push(doc.data());\n        \t\t\tarea[\"_id\"] = doc.id;\n        \t\t\tareas.push(area);\n\n        \t    });\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tareas: areas,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\n\t};\n\n\trender() {\n\n\t\tconsole.log(this);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tEmpresa {this.state.group_name}\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tRecuerda guardar en algún lugar el ID de la empresa, ya que \n\t\t\t\t\t\tpara ingresar a esta sección, debes ingresar el ID \n\t\t\t\t\t\t(junto a la contraseña que ingresaste al registrar la empresa).\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tSi no recuerdas la contraseña, ponte en contacto con los administradores de la plataforma\n\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<h4>\n\n\t\t\t\t\t\tID de empresa:\n\n\t\t\t\t\t</h4>\n\n\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t{this.props.match.params.group_id}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\tNo debes compartir esta ID, esta información es solo para el encargado del clima laboral\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<p> \n\n\t\t\t\t\t<button type=\"button\" className =\"btn btn-primary\" onClick = {this.create_area_button}>Crear nueva área</button>\n\n\t\t\t\t</p>\n\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\tNúmero\n\n\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\tÁrea\n\n\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t{this.state.areas.map( (area, idx) =>\n\n\t\t\t\t\t\t\t\t<tr key = {idx}>\n\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t<td> \n\n\t\t\t\t\t\t\t\t\t\t<Link to = { this.props.match.url.concat('dashboard_area/', area._id, '/', area.name)}>\n\n\t\t\t\t\t\t\t\t\t\t\t{area.name} \n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t</table>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\n\n// import { BrowserRouter as Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\n// make request to server\n// import axios from 'axios';\nimport {fs} from \"../config/firebase\";\n\nclass Create_New_Area extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tname: '',\n\t\t\t// password: null,\n\t\t}\n\n\t\tthis.on_submit = this.on_submit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\n\t};\n\n\ton_submit(event) {\n\n\t\t// prevent default\n\t\tevent.preventDefault();\n\t\t\n\n\t\t// post request\n        // // axios.post('http://192.168.1.9:4000/people_monitoring/add_area/', area)\n        // const ref = fs.collection('groups').doc(this.props.match.params.group_id).collection('areas');\n        // const a_doc = ref.doc();\n\n        // console.log(fs.createId());\n\n\t\t// build body for post request\n\t\tconst area = {\n\n\t\t\tname: this.state.name,\n\t\t\tgroup: this.props.match.params.group_id,\n\t\t\t// date: fs.ServerValue.TIMESTAMP\n\t\t\t// id: a_doc.id,\n\n\t\t};\n\n\n\t\t// ref.add(area)\n        fs.collection('groups').doc(this.props.match.params.group_id).collection('areas').add(area)\n\n        \t// if ok\n            .then(response => {\n\n        \t\t// console.log('Submit');\n        \t\twindow.confirm(\"¡El área ha sido creada exitosamente!\");\n\n        \t\t// redirect to other path\n        \t\tconst url = '/work_env_manag_home/dashboard_group/';\n        \t\tthis.props.history.push(url.concat(this.props.match.params.group_id, '/',this.props.match.params.group_name, '/'));\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \t// user message\n            \twindow.confirm('Ups, tuvimos un problema, ¡vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\n\t};\n\n\thandleChange(event) {\n\n\t\tthis.setState({name: event.target.value});\n\n  \t}\n\t\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tCrear nueva area\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tEsto creará un área dentro de la empresa\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<form onSubmit={this.on_submit}>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> Nombre: </label>\n\n\t\t                <input  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value = {this.state.name}\n\t\t                        onChange={this.handleChange}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" value = \"Crear area\" className=\"btn btn-primary\" />\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t    </div>\n\n        );\n\n\t}\n\n}\n\nexport default Create_New_Area;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nimport {Line} from 'react-chartjs-2';\n// make request to server\nimport axios from 'axios';\nimport {fs} from \"../config/firebase\";\n// fake data\n// var messages = [\n\n// \t{date: '19-03-2019', message: 'Mi jefe directo me grita cada vez que quiere pedirme algo, debería mejorar su trato conmigo'},\n// \t\t{date: '22-03-2019', message: 'Mi jefe directo es muy prepotente en las reuniones que tenemos'},\n// \t\t{date: '1-04-2019', message: 'Ha mejorado demasiado el trato de mi jefe, ahora es muy respetuoso conmigo y mis compañeros ¡Gracias por la intervención!'}\n\n// ]\n\n// fake data\nvar actions = [\n\n\t{date: '22-03-2019', action: 'Se conversa con jefe directo para que mejore trato con trabajadores'},\n\t{date: '25-03-2019', action: 'Se envía a jefe directo a couching para mejorar trato con colaboradores'}\n\n]\n\n// componentn itself\nclass Dashboard_Areas extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tarea_name: this.props.match.params.area_name,\n\t\t\tmessages: [],\n\t\t\tactions: [],\n\t\t\tdata: {},\n\t\t\tget_data: false,\n\t\t\tget_actions: false,\n\t\t}\n\n\t\tthis.create_action_button = this.create_action_button.bind(this);\n\t\tthis.get_data_from_API = this.get_data_from_API.bind(this);\n\t\tthis.get_messages_from_worker = this.get_messages_from_worker.bind(this);\n\t\t// this.create_new_aciton = this.create_new_aciton.bind(this);\n\n\t};\n\n\tcreate_action_button() {\n\n\t\tconst url = '/work_env_manag_home/dashboard_group/';\n\t\tthis.props.history.push(url.concat(this.props.match.params.group_id, '/', this.props.match.params.group_name, '/dashboard_area/', this.props.match.params.area_id, '/', this.props.match.params.area_name, '/create_new_manager_action'));\n\n\t};\n\n\t// get data from API\n\tget_data_from_API() {\n\n\t\tconsole.log(\"hi\");\n\n\t\t// get request for get data\n        fs.collection('groups').doc(this.props.match.params.group_id).collection('areas').doc(this.props.match.params.area_id).collection(\"califications\").get().then( snapshotquery => {\n\n            \t// data structure for chart data\n            \tconst data = [];\n            \tconst labels = [];\n\n    \t\t    // iterate over each item\n    \t\t    snapshotquery.forEach(doc => {\n\n            \t\t// get data\n            \t\tdata.push(doc.data().calification);\n            \t\tlabels.push(doc.data().date);\n\n    \t\t    });\n\n            \t// data sctructure\n        \t\tconst data_ = {};\n        \t\tdata_['labels'] = labels;\n\n        \t\t// temporal variable\n        \t\tvar tmp = {\n        \t\t\t\tlabel: 'Estado de animo del area',\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tlineTension: 0.1,\n\t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tborderCapStyle: 'butt',\n\t\t\t\t\t\tborderDash: [],\n\t\t\t\t\t\tborderDashOffset: 0.0,\n\t\t\t\t\t\tborderJoinStyle: 'miter',\n\t\t\t\t\t\tpointBorderColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\t\t\tpointBorderWidth: 1,\n\t\t\t\t\t\tpointHoverRadius: 5,\n\t\t\t\t\t\tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(220,220,220,1)',\n\t\t\t\t\t\tpointHoverBorderWidth: 2,\n\t\t\t\t\t\tpointRadius: 1,\n\t\t\t\t\t\tpointHitRadius: 10,\n        \t\t};\n        \t\ttmp['data'] = data;\n        \t\tdata_['datasets'] = [tmp];\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tdata: data_,\n            \t\tget_data: true,\n\n            \t});\n\n            \t// console.log(this.state.data.labels.length);\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\tget_actions_from_API(){\n\n\t\t// get request for get data\n        // axios.get('http://192.168.1.9:4000/people_monitoring/action_of_manager/' + this.props.match.params.area_id)\n        fs.collection('groups').doc(this.props.match.params.group_id).collection('areas').doc(this.props.match.params.area_id).collection(\"actions_of_manager\").get().then( snapshotquery => {\n\n        \t// // if ok\n         //    .then(response => {\n\n         \t\tlet actions = [];\n\n \t\t\t    // iterate over each item\n \t\t\t    snapshotquery.forEach(doc => {\n\n \t        \t\t// get data\n \t        \t\tconst action = {\n \t        \t\t\tdescription: doc.data().description,\n \t        \t\t\tdate: doc.data().date.toDate().toString()\n \t        \t\t}\n\n \t        \t\tactions.push(action);\n\n \t\t\t    });\n\n            \t// console.log(response);\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tactions: actions,\n            \t\tget_actions: true,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\tget_messages_from_worker() {\n\n\t\t// get request for messages from users\n        // axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id)\n        fs.collection('groups').doc(this.props.match.params.group_id).collection('areas').doc(this.props.match.params.area_id).collection(\"messages_from_workers\").get().then( snapshotquery => {\n\n            \t// get data from API\n            \t// const messages = response.data;\n            \tlet messages = [];\n\n\t\t\t    // iterate over each item\n\t\t\t    snapshotquery.forEach(doc => {\n\n\t        \t\t// get data\n\t        \t\tconst message = {\n\t        \t\t\tmessage: doc.data().message,\n\t        \t\t\t// date: doc.data().date.toDate().toString()\n\t        \t\t\tdate: doc.data().date,\n\t        \t\t}\n\n\t        \t\tmessages.push(message);\n\n\t\t\t    });\n\n            \t// update state\n            \tthis.setState({\n\n            \t\tmessages: messages,\n\n            \t});\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t}\n\n\t// life cycle of component\n\tcomponentDidMount() {\n\n\t\t// // get request for messages from users\n  //       axios.get('http://192.168.1.9:4000/people_monitoring/message_from_worker/' + this.props.match.params.area_id)\n\n  //       \t// if ok\n  //           .then(response => {\n\n  //           \t// get data from API\n  //           \tconst messages = response.data;\n\n  //           \t// console.log(messages);\n\n  //           \t// update state\n  //           \tthis.setState({\n\n  //           \t\tmessages: messages,\n\n  //           \t});\n\n  //           })\n\n  //           // if error\n  //           .catch(function (error){\n\n  //           \twindow.confirm('Ups, tuvimos un error, ¡Vuelve a intentarlo mas tarde!');\n  //           \t// dislpay error in console\n  //               console.log(error);\n\n  //           });\n\t\t\n\t\t// get initial data\n\t\tthis.get_data_from_API();\n\t\tthis.get_messages_from_worker();\n\n\t\t// update data each (last_argument) milisecons\n\t\tsetInterval(this.get_data_from_API, 10000);\n\t\tsetInterval(this.get_messages_from_worker, 10000);\n\n\t\t// get actions\n\t\tthis.get_actions_from_API();\n\n\t};\n\n\t// render item\n\trender() {\n\n\t\t// console.log(this.state.messages);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h1>\n\n\t\t\t\t\tArea {this.state.area_name}\n\n\t\t\t\t</h1>\n\n\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\tDebes enviarles el LINK del área a los trabajadores del área para que ellos puedan calificar el área y enviarte mensajes.\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<h2>\n\n\t\t\t\t\t\tLink del área:\n\n\t\t\t\t\t</h2>\n\n\t\t\t\t\t<div className=\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\t{'http://192.168.1.9:3000/dashboard_worker/' + this.props.match.params.area_id + '/' + this.props.match.params.area_name}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className =\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\tEste LINK debes compartirlo con los trabajadores del área\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMonitoreo de estado anímico\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t{this.state.get_data && this.state.data.labels.length > 0 \n\n\t\t\t\t\t\t? \n\n\t\t\t\t\t\t\tnull \n\n\t\t\t\t\t\t: \n\n\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t\tLos trabajadores aún no ingresan calificaciones\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t}\n\n\t\t\t\t\t<Line data={this.state.data} />\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tMensajes de trabajadores del área\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t\tRecuerda que los mensajes enviados por los trabajadores son totalmente anónimos\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div> \n\n\t\t\t\t\t\t{this.state.messages.length > 0\n\n\t\t\t\t\t\t\t?\n\n\t\t\t\t\t\t\t\tnull\n\n\t\t\t\t\t\t\t:\n\n\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t\t\t\tLos trabajadores aún no te envían mensajes\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNúmero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tMensaje\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.messages.map( (message, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {message.message} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h3>\n\n\t\t\t\t\t\tAcciones tomadas\n\n\t\t\t\t\t</h3>\n\n\t\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\t\tAcá puedes registrar las acciones correctivas que vayas realizando, de tal forma de gestionar y analizar si es que influyen en el estado anímico del área\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{this.state.get_actions && this.state.actions.length > 0 \n\n\t\t\t\t\t\t? \n\n\t\t\t\t\t\t\tnull \n\n\t\t\t\t\t\t: \n\n\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\n\t\t\t\t\t\t\tAún no registras acciones\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t}\n\n\t\t\t\t\t<p>\n\n\t\t\t\t\t\t<button type=\"button\" className =\"btn btn-primary\" onClick = {this.create_action_button}> \n\n\t\t\t\t\t\t\tAgregar acción \n\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div className = 'table table-responsive'>\n\n\t\t\t\t\t\t<table className = 'table'>\n\n\t\t\t\t\t\t\t<thead>\n\n\t\t\t\t\t\t\t\t<tr>\n\n\t\t\t\t\t\t\t\t\t<th> \n\n\t\t\t\t\t\t\t\t\t\tNúmero\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tFecha\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t\t<th>\n\n\t\t\t\t\t\t\t\t\t\tAcción\n\n\t\t\t\t\t\t\t\t\t</th>\n\n\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\n\t\t\t\t\t\t\t\t{this.state.actions.map( (action, idx) =>\n\n\t\t\t\t\t\t\t\t\t<tr key = {idx}>\n\n\t\t\t\t\t\t\t\t\t\t<td> {idx + 1} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.date} </td>\n\t\t\t\t\t\t\t\t\t\t<td> {action.description} </td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Dashboard_Areas;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\n// make request to server\n// import axios from 'axios';\nimport {fs} from \"../config/firebase\";\n// import firebase from \"firebase\";\n// import \"firebase/firestore\";\n\nclass Daily_Question extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\t// name: null,\n\t\t\t// password: null,\n\t\t}\n\n\t\tthis.on_submit = this.on_submit.bind(this);\n\n\t};\n\n\t// on submit function\n\ton_submit(calification) {\n\n\t\t// get current date\n\t\tvar currentdate = new Date(); \n\t\tvar datetime =  currentdate.getDate() + \"/\"\n\t\t                + (currentdate.getMonth()+1)  + \"/\" \n\t\t                + currentdate.getFullYear() + \" \"  \n\t\t                + currentdate.getHours() + \":\"  \n\t\t                + currentdate.getMinutes() + \":\" \n\t\t                + currentdate.getSeconds()\n\n\t\t// build body for post request\n\t\tconst calification_ = {\n\n\t\t\tcalification: calification,\n\t\t\tarea: this.props.area_id,\n\t\t\tdate: datetime\n\t\t};\n\n\t\t// post request\n        // axios.post('http://192.168.1.9:4000/people_monitoring/add_daily_question/', calification_)\n        // fs.collection('groups').doc(this.props.group_id).collection('areas').doc(this.props.area_id).collection(\"califications\").add(calification_)\n        fs.collection('groups').doc(this.props.group_id).collection('areas').doc(this.props.area_id).collection(\"califications\").add(calification_)\n\n        \t// if ok\n            .then(response => {\n\n        \t\t// console.log('Submit');\n        \t\twindow.confirm(\"¡Gracias por hacernos saber!\");\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \t// user message\n            \twindow.confirm('Ups, tuvimos un problema, ¡vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h4>\n\n\t\t\t\t\tPregunta diaria\n\t\t\t\t\t\t\n\t\t\t\t</h4>\n\n\t\t\t\t<p className=\"alert alert-primary\" role=\"alert\">\n\n\t            \tCon esta información, el encargado puede saber el estado de ánimo actual de toda el área, pudiendo mejorar la situación actual del ambiente laboral de tu área\n\n\t            </p>\n\n\n\t\t\t\t<div className = 'container'>\n\n\t\t            <div className=\"container\"> \n\n\t\t                <label> ¿Como te sientes hoy día en tu área de trabajo? </label>\n\n\t\t\t\t\t</div>\n\t\t                \n\t                <p className = 'container'>\n\n\t\t                <button onClick = {() => this.on_submit(-1)} type=\"button\" className =\"btn btn-danger btn-block\"> \n\n\t\t\t\t\t\t\tMal\n\n\t\t\t\t\t\t</button>\n\n\t                    <button onClick = {() => this.on_submit(0)} type=\"button\" className =\"btn btn-warning btn-block\"> \n\n\t\t\t\t\t\t\tNormal\n\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button onClick = {() => this.on_submit(1)} type=\"button\" className =\"btn btn-primary btn-block\"> \n\n\t\t\t\t\t\t\tBien\n\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</p>\n\n\t            </div>\n\n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Daily_Question;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\n// make request to server\nimport axios from 'axios';\nimport {fs} from \"../config/firebase\";\n\nclass Worker_Message extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tmessage: '',\n\t\t\t// password: null,\n\t\t}\n\n\t\tthis.on_submit_message = this.on_submit_message.bind(this);\n\t\tthis.handle_change = this.handle_change.bind(this);\n\t};\n\n\t// handle change in input text\n\thandle_change(event) {\n\n\t\t// update state\n\t\tthis.setState({\n\n\t\t\tmessage: event.target.value\n\n\t\t});\n\n\t};\n\n\t// on submit form\n\ton_submit_message(event) {\n\n\t\t// prevent default\n\t\tevent.preventDefault();\n\t\t\n\t\t// get current date\n\t\tvar currentdate = new Date(); \n\t\tvar datetime =  currentdate.getDate() + \"/\"\n\t\t                + (currentdate.getMonth()+1)  + \"/\" \n\t\t                + currentdate.getFullYear() + \" \"  \n\t\t                + currentdate.getHours() + \":\"  \n\t\t                + currentdate.getMinutes() + \":\" \n\t\t                + currentdate.getSeconds()\n\n\t\t// build body for post request\n\t\tconst message_ = {\n\n\t\t\tmessage: this.state.message,\n\t\t\tarea: this.props.area_id,\n\t\t\tdate: datetime,\n\t\t};\n\n\t\t// post request\n        // axios.post('http://192.168.1.9:4000/people_monitoring/add_message_from_worker/', message_)\n        fs.collection('groups').doc(this.props.group_id).collection('areas').doc(this.props.area_id).collection(\"messages_from_workers\").add(message_)\n\n        \t// if ok\n            .then(response => {\n\n        \t\t// console.log('Submit');\n        \t\twindow.confirm(\"¡Tu mensaje ha sido enviado correctamente!\");\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \t// user message\n            \twindow.confirm('Ups, tuvimos un problema, ¡vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h4>\n\n\t\t\t\t\tMensaje anónimo a encargado de clima laboral de tu área\n\t\t\t\t\t\t\n\t\t\t\t</h4>\n\n\t\t\t\t<p className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tCon tu información el encargado de clima laboral puede saber con más detalle el estado actual del ambiente laboral. Puedes informarle por ejemplo, alguna experiencia negativa/positiva con algún compañero o jefe del área.\n\n\t\t\t\t</p>\n\n\t            <form onSubmit={this.on_submit_message}>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> Mensaje: </label>\n\n\t\t                <textarea  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value = {this.state.message}\n\t\t                        onChange={this.handle_change}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" \n\t                \t\t\tvalue = \"Enviar mensaje anónimo\" \n\t                \t\t\tclassName=\"btn btn-primary btn-block\" \n            \t\t\t/>\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Worker_Message;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\nimport Daily_Question from \"./daily_question.component\";\nimport Worker_Message from './worker_message.component';\n\n\nclass Dashboard_Worker extends Component {\n\n\trender() {\n\n\t\t// console.log(this);\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<div className = 'container'>\n\n\t\t\t\t\t<h1>\n\n\t\t\t\t\t\tArea: {this.props.match.params.area_name}\n\t\t\t\t\t\t\t\n\t\t\t\t\t</h1>\n\n\t\t\t\t\t<div class=\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\tPuedes estar tranquilo, ya que toda esta información es totalmente ANÓNIMA, por lo que nadie jamás sabrá quien envía esta información\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\t<Daily_Question group_id = {this.props.match.params.group_id} area_id = {this.props.match.params.area_id}/>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"alert alert-success\" role=\"alert\">\n\n\t\t\t\t\t\t<Worker_Message group_id = {this.props.match.params.group_id} area_id = {this.props.match.params.area_id}/>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n        \n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Dashboard_Worker;","import React, { Component } from \"react\";\n\n// make request to server\n// import axios from 'axios';\n// import { BrowserRouter as Link } from \"react-router-dom\";\nimport {fs} from \"../config/firebase\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\nclass Login_Worker extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tarea_id: '',\n\t\t\tgroup_id: '',\n\t\t\t// password: '',\n\t\t}\n\n\t\tthis.on_submit = this.on_submit.bind(this);\n\t\tthis.on_change_input_area = this.on_change_input_area.bind(this);\n\t\tthis.on_change_input_group = this.on_change_input_group.bind(this);\n\n\t\t// this.on_change_input_password = this.on_change_input_password.bind(this);\n\n\t};\n\n\ton_submit(event) {\n\n\t\t// prevent fomr reload page automatically\n\t\tevent.preventDefault();\n\n\t\t// get request for get data\n\t\t// axios.get('http://192.168.1.9:4000/people_monitoring/area/' + this.state.area_id + '/')\n        fs.collection('groups').doc(this.state.group_id).collection(\"areas\").doc(this.state.area_id).get().then( doc => {\n\n\t\t\t// if doc exist\n\t\t\tif(doc.exists) {\n\n\t\t\t\t// check password\n\t\t\t\tif(doc.data().password == this.state.password){\n\n\t\t\t\t\tconsole.log(\"data correct!\");\n\n\t\t\t\t\tthis.props.history.push('/dashboard_worker/' + this.state.group_id + \"/\" + this.state.area_id + '/' + doc.data().name);\n\n\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\twindow.confirm('Ups, al parecer la contraseña no es correcta ¡Verificala!');\n\n\t\t\t\t}\n\n\t\t\t} \n\n\t\t\telse {\n\n\t\t\t\twindow.confirm('Ups, al parecer los ingresados no son correctos ¡Verifica que sean correctos!');\n\n\t\t\t}\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \tconsole.log(\"asjidoa\");\n            \t\n            \twindow.confirm('Ups, al parecer los ingresados no son correctos ¡Verifica que sean correctos!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\ton_change_input_area(event) {\n\n\t\tthis.setState({area_id : event.target.value})\n\n\t};\n\n\ton_change_input_group(event) {\n\n\t\tthis.setState({group_id : event.target.value})\n\n\t};\n\t\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tIngresar a mi área de trabajo\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div class=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tRecuerda pedirle el ID de tu empresa y el ID de tu área de trabajo al encargado de clima laboral de tu empresa\n\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={this.on_submit}>\n\n    \t            <div className=\"form-group\"> \n\n    \t                <label> ID del grupo: </label>\n\n    \t                <input  type=\"text\"\n    \t                        className=\"form-control\"\n    \t                        value={this.state.group_id}\n    \t                        onChange={this.on_change_input_group}\n                        />\n\n    \t            </div>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> ID del área: </label>\n\n\t\t                <input  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.area_id}\n\t\t                        onChange={this.on_change_input_area}\n\t                    />\n\n\t\t            </div>\n\n\n\t\t            {/*\n\t\t            <div className=\"form-group\">\n\n\t\t                <label> Contraseña: </label>\n\n\t\t                <input \n\t\t                        type=\"text\" \n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.password}\n\t\t                        onChange={this.on_change_input_password}\n\t                    />\n\n\t\t            </div>\n\n\t\t        \t*/}\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" value = \"Ingresar\" className=\"btn btn-primary btn-block\" />\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t    </div>\n\n        );\n\n\t}\n\n}\n\nexport default Login_Worker;","import React, { Component } from \"react\";\n\n// make request to server\nimport axios from 'axios';\nimport {fs} from \"../config/firebase\";\n// import { BrowserRouter as Link } from \"react-router-dom\";\n\n// import Control_Risk from \"./control_risk_list.component\";\n\nclass Login_to_Group extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\tgroup_id: '',\n\t\t\tpassword: '',\n\t\t}\n\n\t\tthis.on_submit = this.on_submit.bind(this);\n\t\tthis.on_change_input_group = this.on_change_input_group.bind(this);\n\t\tthis.on_change_input_password = this.on_change_input_password.bind(this);\n\n\t};\n\n\ton_submit(event) {\n\n\t\t// prevent fomr reload page automatically\n\t\tevent.preventDefault();\n\n\t\t// console.log(this);\n\n\t\t// this.props.history.push('/work_env_manag_home/dashboard_group/');\n\n\t\t// get request for get data\n        // axios.get('http://192.168.1.9:4000/people_monitoring/group/' + this.state.group_id + '/' + this.state.password)\n        fs.collection('groups').doc(this.state.group_id).get().then( doc => {\n\n        \t// // if ok\n            // .then(response => {\n         \t// console.log(doc);\n\n\t\t\t// if doc exist\n\t\t\tif(doc.exists) {\n\n\t\t\t\t// check password\n\t\t\t\tif(doc.data().password == this.state.password){\n\n\t\t\t\t\tthis.props.history.push('/work_env_manag_home/dashboard_group/' + this.state.group_id + '/' + doc.data().name + '/');\n\n\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\twindow.confirm('Ups, al parecer la contraseña no es correcta ¡Verificala!');\n\n\t\t\t\t}\n\n\t\t\t} \n\n\t\t\telse {\n\n\t\t\t\twindow.confirm('Ups, al parecer los ingresados no son correctos ¡Verifica que sean correctos!');\n\n\t\t\t}\n            \t// // get data from API\n            \t// const group = response.data;\n\n            \t// // console.log(group);\n\n            \t// // if response of server contain the group (response can be 0 or 1 of lenght)\n            \t// if(group.length > 0) {\n\n            \t// \tthis.props.history.push('/work_env_manag_home/dashboard_group/' + this.state.group_id + '/' + group[0].name + '/');\n\n            \t// }\n\n            \t// else {\n\n            \t// \twindow.confirm('Ups, al parecer los ingresados no son correctos ¡Verifica que sean correctos!');\n\n            \t// }\n\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \twindow.confirm('Ups, al parecer los ingresados no son correctos ¡Verifica que sean correctos!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\ton_change_input_group(event) {\n\n\t\tthis.setState({group_id : event.target.value})\n\n\t};\n\t\n\ton_change_input_password(event) {\n\n\t\tthis.setState({password : event.target.value})\n\n\t};\n\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h2>\n\n\t\t\t\t\tIngresar a mi empresa\n\n\t\t\t\t</h2>\n\n\t\t\t\t<div class=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tSi es que olvidaste el ID o contraseña de tu empresa, ponte en contacto con el administrador de la plataforma\n\n\t\t\t\t</div>\n\n\t\t\t\t<form onSubmit={this.on_submit}>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> ID de la empresa: </label>\n\n\t\t                <input  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.group_id}\n\t\t                        onChange={this.on_change_input_group}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <label> Contraseña: </label>\n\n\t\t                <input \n\t\t                        type=\"password\" \n\t\t                        className=\"form-control\"\n\t\t                        value={this.state.password}\n\t\t                        onChange={this.on_change_input_password}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" value = \"Ingresar\" className=\"btn btn-primary btn-block\" />\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t    </div>\n\n        );\n\n\t}\n\n}\n\nexport default Login_to_Group;","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\n// make request to server\nimport axios from 'axios';\n\nclass Manager_Action extends Component {\n\n\t// constructor\n\tconstructor(props) {\n\n\t\t// constructur of parent\n\t\tsuper(props);\n\n\t\t// initial states\n\t\tthis.state = {\n\n\t\t\taction: '',\n\t\t\t// password: null,\n\t\t}\n\n\t\tthis.on_submit_action = this.on_submit_action.bind(this);\n\t\tthis.handle_change = this.handle_change.bind(this);\n\t};\n\n\t// handle change in input text\n\thandle_change(event) {\n\n\t\t// update state\n\t\tthis.setState({\n\n\t\t\taction: event.target.value\n\n\t\t});\n\n\t};\n\n\t// on submit form\n\ton_submit_action(event) {\n\n\t\t// prevent default\n\t\tevent.preventDefault();\n\t\t\n\t\t// build body for post request\n\t\tconst action_ = {\n\n\t\t\tdescription: this.state.action,\n\t\t\tarea: this.props.match.params.area_id,\n\t\t};\n\n\t\t// console.log(action_);\n\n\t\t// post request\n        axios.post('http://192.168.1.9:4000/people_monitoring/add_action_of_manager/', action_)\n\n        \t// if ok\n            .then(response => {\n\n            \t// user messsage\n        \t\twindow.confirm(\"¡Se ha creado correctamente!\");\n\n        \t\t// redirect to dashboard\n        \t\tconst url_base = '/work_env_manag_home/dashboard_group/';\n        \t\tconst url = url_base.concat(this.props.match.params.group_id, '/', this.props.match.params.group_name, '/dashboard_area/', this.props.match.params.area_id, '/', this.props.match.params.area_name);\n\t\t\t\tthis.props.history.push(url);\n\n            })\n\n            // if error\n            .catch(function (error){\n\n            \t// user action\n            \twindow.confirm('Ups, tuvimos un problema, ¡vuelve a intentarlo mas tarde!');\n            \t// dislpay error in console\n                console.log(error);\n\n            });\n\n\t};\n\n\trender() {\n\n\t\treturn(\n\n\t\t\t<div className = 'container'>\n\n\t\t\t\t<h4>\n\n\t\t\t\t\tCrear acción del área\n\t\t\t\t\t\t\n\t\t\t\t</h4>\n\n\t\t\t\t<p className=\"alert alert-primary\" role=\"alert\">\n\n\t\t\t\t\tCon tu información, el encargado de clima laboral puede saber con más detalle el estado actual del ambiente laboral. Puedes informarle por ejemplo, alguna experiencia negativa/positiva con algún compañero o jefe del área.\n\n\t\t\t\t</p>\n\n\t            <form onSubmit={this.on_submit_action}>\n\n\t\t            <div className=\"form-group\"> \n\n\t\t                <label> Acción: </label>\n\n\t\t                <textarea  type=\"text\"\n\t\t                        className=\"form-control\"\n\t\t                        value = {this.state.action}\n\t\t                        onChange={this.handle_change}\n\t                    />\n\n\t\t            </div>\n\n\t\t            <div className=\"form-group\">\n\n\t\t                <input type=\"submit\" \n\t                \t\t\tvalue = \"Crear acción\" \n\t                \t\t\tclassName=\"btn btn-primary btn-block\" \n            \t\t\t/>\n\n\t\t            </div>\n\n\t\t        </form>\n\n\t\t\t</div>\n\n\t\t);\n\n\t}\n\n}\n\nexport default Manager_Action;","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./components/home.component\";\nimport Work_Environment_Manager_Home from \"./components/work_environment_manager_home.component\";\nimport Create_New_Group from './components/create_new_group.component';\nimport Work_Env_Manager_Dashboard from './components/work_environment_manager_dashboard.component';\nimport Create_New_Area from './components/create_new_area.component';\nimport Dashboard_Areas from './components/dashboard_areas.component';\nimport Dashboard_Worker from './components/worker_dashboard.component';\nimport Login_Worker from './components/login_worker.component';\nimport Login_to_Group from './components/login_to_group.component';\nimport Manager_Action from './components/create_new_action_of_manager.component'\n\n// Component \nclass App extends Component {\n\n  // render method\n  render() {\n\n    return (\n\n      <Router>\n\n        <div className=\"container\">\n\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\n\n            <Link to=\"/\" className=\"navbar-brand\"> \n\n              Monitoreo de clima laboral\n\n            </Link>\n\n            <div className=\"collpase navbar-collapse\">\n\n              <ul className=\"navbar-nav mr-auto\">\n\n                <li className=\"navbar-item\">\n\n                  <Link to=\"/\" className=\"nav-link\">\n\n                    Inicio\n\n                  </Link>\n                 \n                </li>\n\n              </ul>\n\n            </div>\n\n          </nav>\n\n        </div>\n\n        {/* Home */}\n        <Route path = '/' exact component = {Home} />\n\n        {/* manager home*/}\n        <Route path = '/work_env_manag_home/' exact component = {Work_Environment_Manager_Home} />\n\n        {/* create group /login manager */}\n        <Route path = '/work_env_manag_home/create_new_group/' exact component = {Create_New_Group} />\n        <Route path = '/work_env_manag_home/login_to_group/' exact component = {Login_to_Group} />\n\n        {/*dash board of group */}\n        <Route path = '/work_env_manag_home/dashboard_group/:group_id/:group_name/' exact component = {Work_Env_Manager_Dashboard} />\n        <Route path = '/work_env_manag_home/dashboard_group/:group_id/:group_name/create_new_area/' exact component = {Create_New_Area} />\n\n        {/* dahsboard of area*/}\n        <Route path = '/work_env_manag_home/dashboard_group/:group_id/:group_name/dashboard_area/:area_id/:area_name' exact  component = {Dashboard_Areas} />\n        <Route path = '/work_env_manag_home/dashboard_group/:group_id/:group_name/dashboard_area/:area_id/:area_name/create_new_manager_action' exact component = {Manager_Action} />\n\n        {/* login worker*/}\n        <Route path = '/login_worker/' exact component = {Login_Worker} />\n\n      {/* dashboard worker*/}\n        <Route path = '/dashboard_worker/:group_id/:area_id/:area_name' exact component = {Dashboard_Worker} />\n\n      </Router>\n\n    );\n\n  }\n\n}\n\n// exporting app\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}